{
  "swagger": "2.0",
  "info": {
    "version": "0.0.7",
    "title": "Business Model Management"
  },
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Business Model",
      "description": "Operations related to business model as the creating of the new ones and editing.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://natura.atlassian.net/wiki/x/M4CcE"
      }
    },
    {
      "name": "Domain",
      "description": "Operations related to Domain schema"
    },
    {
      "name": "Structure",
      "description": "Operations related to Structure"
    },
    {
      "name": "Structure Level",
      "description": "Operations related to Structure Level",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://natura.atlassian.net/wiki/x/HwCaE"
      }
    },
    {
      "name": "Hierarchy Level",
      "description": "Operations related to Hierarchy Level",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://natura.atlassian.net/wiki/x/HwCaE"
      }
    },
    {
      "name": "Calendar",
      "description": "Operations related to Calendar and Cycles",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://natura.atlassian.net/wiki/x/H4DRE"
      }
    },
    {
      "name": "Holidays",
      "description": "Operations related to Holidays"
    },
    {
      "name": "Cycles",
      "description": "Operations related to Cycles"
    },
    {
      "name": "Block",
      "description": "Operations related to block"
    },
    {
      "name": "Zones",
      "description": "Operations related to Zones and Sub-Zones"
    },
    {
      "name": "District",
      "description": "Operations related to Distrct"
    },
    {
      "name": "Transfers",
      "description": "Operations related to Calendar and Structure Transfers"
    },
    {
      "name": "Movement",
      "description": "Operations related to Movement of Structure"
    },
    {
      "name": "Parameters",
      "description": "Operations related to Parameters"
    },
    {
      "name": "External",
      "description": "Operations related to External API"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "appToken": {
      "name": "appToken",
      "in": "header",
      "description": "Application Token",
      "required": true,
      "type": "string"
    },
    "language": {
      "name": "language",
      "in": "header",
      "description": "Language as defined by ISO-6391.",
      "type": "string",
      "required": false,
      "default": "pt-BR"
    },
    "uuid": {
      "name": "uuid",
      "in": "path",
      "description": "Entity unique identifier",
      "type": "string",
      "format": "uuid",
      "required": true
    },
    "country": {
      "name": "country",
      "in": "header",
      "description": "Country as defined by ISO-31662",
      "type": "string",
      "default": "BR"
    },
    "company": {
      "name": "company",
      "in": "header",
      "description": "company code",
      "type": "string"
    },
    "timeZone": {
      "name": "timeZone",
      "in": "header",
      "description": "Time Zone as defined by UTC offset",
      "required": false,
      "type": "string",
      "default": "America/Sao Paulo"
    },
    "userId": {
      "name": "userId",
      "in": "header",
      "description": "Current User identifier",
      "type": "string"
    },
    "status": {
      "name": "status",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter by Status of BusinessModel",
      "default": ""
    },
    "postalCode": {
      "name": "status",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Postal code",
      "default": ""
    },
    "role": {
      "name": "role",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter by Role of BusinessModel",
      "default": ""
    },
    "function": {
      "name": "function",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter by Function of BusinessModel",
      "default": ""
    },
    "businessModelName": {
      "name": "businessModelName",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter by businessModel Name",
      "default": ""
    },
    "businessModelId": {
      "name": "businessModelId",
      "in": "path",
      "description": "Business Model's identifier",
      "type": "number",
      "required": true
    },
    "structureLevelId": {
      "name": "structureLevelId",
      "in": "path",
      "description": "structureLevelId",
      "type": "number",
      "required": true
    },
    "parentStructureLevelId": {
      "name": "parentStructureLevelId",
      "in": "path",
      "description": "parentStructureLevelId",
      "type": "number",
      "required": true
    },
    "parentStructureUid": {
      "name": "parentStructureUid",
      "in": "query",
      "description": "parent Structure Uid",
      "type": "string",
      "format": "uuid",
      "required": false
    },
    "structureLevelName": {
      "name": "structureLevelName",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter all country's levels by structureLevel Name",
      "default": ""
    },
    "structureCode": {
      "name": "structureCode",
      "in": "path",
      "description": "structureCode",
      "type": "number",
      "required": true
    },
    "parentStructureCode": {
      "name": "parentStructureCode",
      "in": "path",
      "description": "parentStructureCode",
      "type": "number",
      "required": true
    },
    "structureName": {
      "name": "structureName",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filter all country's levels by structure Name",
      "default": ""
    },
    "calendarId": {
      "name": "calendarId",
      "in": "path",
      "description": "calendarId",
      "type": "number",
      "required": true
    },
    "cycleId": {
      "name": "cycleId",
      "in": "path",
      "description": "cycleId",
      "type": "number",
      "required": true
    },
    "zoneId": {
      "name": "zoneId",
      "in": "path",
      "description": "zoneId",
      "type": "number",
      "required": true
    },
    "stateId": {
      "name": "state",
      "in": "query",
      "description": "state Id",
      "type": "number",
      "required": true
    },
    "zoneStructureId": {
      "name": "zoneStructureId",
      "in": "path",
      "description": "zoneStructureId",
      "type": "number",
      "required": true
    },
    "transferCalendarId": {
      "name": "transferCalendarId",
      "in": "path",
      "description": "transferCalendarId",
      "type": "number",
      "required": true
    },
    "transferStructureId": {
      "name": "transferStructureId",
      "in": "path",
      "description": "transferStructureId",
      "type": "number",
      "required": true
    },
    "hierarchyId": {
      "name": "hierarchyId",
      "in": "path",
      "description": "hierarchyId",
      "type": "number",
      "required": true
    },
    "calendarYear": {
      "name": "calendarYear",
      "in": "path",
      "description": "calendarYear",
      "type": "number",
      "required": true
    },
    "holidayYear": {
      "name": "holidayYear",
      "in": "path",
      "description": "holidayYear",
      "type": "string",
      "required": true
    },
    "geoCoverage": {
      "name": "geo-coverage",
      "in": "query",
      "required": false,
      "type": "string"
    },
    "_limit": {
      "name": "_limit",
      "in": "query",
      "description": "Defines the limit of the returned list",
      "type": "string",
      "required": false,
      "default": 200
    },
    "_offset": {
      "name": "_offset",
      "in": "query",
      "description": "Current number of the pagination",
      "type": "string",
      "required": false,
      "default": 0
    }
  },
  "paths": {
    "/businessModel": {
      "x-swagger-router-controller": "businessModelController",
      "post": {
        "tags": [
          "Business Model"
        ],
        "summary": "Create a new business model.",
        "description": "To create a new business model is necessary to choose a business model \"name\", to associate one enterprise and possible roles and functions of people.",
        "operationId": "createBusinessModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "businessModel",
            "in": "body",
            "description": "Message in JSON format with the information needed to register a new business model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The business model was successfully Created",
            "schema": {
              "$ref": "#/definitions/NewBusinessModel"
            },
            "headers": {
              "location": {
                "type": "string",
                "description": "Location of the resource created"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "A business rule failed while creating a project",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Business Model"
        ],
        "summary": "Get list of business model.",
        "description": "Returns all business model.",
        "operationId": "getBusinessModel",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/status"
          },
          {
            "$ref": "#/parameters/function"
          },
          {
            "$ref": "#/parameters/businessModelName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessModel"
              }
            },
            "headers": {
              "contentRange": {
                "description": "Total existing records.",
                "type": "integer"
              },
              "acceptRange": {
                "description": "Maximum number of records that can be requested per request.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/businessModel/{businessModelId}": {
      "x-swagger-router-controller": "businessModelController",
      "get": {
        "tags": [
          "Business Model"
        ],
        "summary": "Get a business model by businessModelId.",
        "description": "Get business model detail.",
        "operationId": "getBusinessModelById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/businessModel/uuid/{uuid}": {
      "x-swagger-router-controller": "businessModelController",
      "get": {
        "tags": [
          "Business Model"
        ],
        "summary": "Get a business model by businessModelUid.",
        "description": "Get business model detail.",
        "operationId": "getBusinessModelByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Business Model"
        ],
        "summary": "Partially update a business model.",
        "description": "Updates a business model's information.",
        "operationId": "patchBusinessModel",
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "businessModel",
            "in": "body",
            "description": "Message in JSON format with the information needed to register a new business model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessModel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/company": {
      "x-swagger-router-controller": "companyController",
      "get": {
        "summary": "Get list of Companies.",
        "description": "Get list of Companies.",
        "tags": [
          "Domain"
        ],
        "operationId": "getCompany",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/country": {
      "x-swagger-router-controller": "countryController",
      "get": {
        "summary": "Get list of Countries.",
        "description": "Get list of Countries.",
        "tags": [
          "Domain"
        ],
        "operationId": "getCountry",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Country"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/status": {
      "x-swagger-router-controller": "statusController",
      "get": {
        "summary": "Get list of Status.",
        "description": "Get list of Status.",
        "tags": [
          "Domain"
        ],
        "operationId": "getStatus",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/functions": {
      "x-swagger-router-controller": "businessModelController",
      "get": {
        "summary": "Get list of Functions.",
        "description": "Get list of Functions with rules.",
        "tags": [
          "Business Model"
        ],
        "operationId": "getFunctions",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Functions"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structuresLevel": {
      "x-swagger-router-controller": "structureLevelController",
      "get": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Get list of all one country's Structures Levels",
        "description": "This endpoint has as main objective to access and to bring the list of all levels of structures of a country. As an optional feature, it also has the ability to bring only the levels of structures filtered by a Struture name.",
        "operationId": "getStructLevel",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/structureLevelName"
          }
        ],
        "responses": {
          "200": {
            "description": "Brought all Structures levels with success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Create a new Structure Level",
        "description": "This main function is to create one new Structure level with the inputs of the Structure level name and country",
        "operationId": "createStructLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "structureLevel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "structureLevelName": {
                  "type": "string"
                },
                "countryId": {
                  "type": "number"
                },
                "companyId": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created successfully",
            "schema": {
              "$ref": "#/definitions/NewStructureLevel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structuresLevel/{structureLevelId}": {
      "x-swagger-router-controller": "structureLevelController",
      "get": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Get one specific Structure Level.",
        "description": "This endpoint has the main objective looking for one specific Structure level with the informed structure identifier.",
        "operationId": "getStructLevelById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/structureLevelId"
          }
        ],
        "responses": {
          "200": {
            "description": "Structure level finded",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Edit one specific Structure Level.",
        "description": "Edit Structure Level name.",
        "operationId": "patchStructLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/structureLevelId"
          },
          {
            "name": "structureLevel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructureLevel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad inputs Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Delete one specific Structure Level.",
        "description": "Delete one specific Structure Level.",
        "operationId": "deleteStructLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/structureLevelId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structuresLevel/uuid/{uuid}": {
      "x-swagger-router-controller": "structureLevelController",
      "get": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Get one specific Structure Level.",
        "description": "This endpoint has the main objective looking for one specific Structure level with the informed structure identifier.",
        "operationId": "getStructLevelByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Structure level finded",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Edit one specific Structure Level.",
        "description": "Edit Structure Level name.",
        "operationId": "patchStructLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "structureLevel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructureLevel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad inputs Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Structure Level"
        ],
        "summary": "Delete one specific Structure Level.",
        "description": "Delete one specific Structure Level.",
        "operationId": "deleteStructLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures/uuid/{uuid}": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Get one specific Structure",
        "description": "This endpoint has the main objective looking for one specific Structure with the informed structure identifier.",
        "operationId": "getStructureByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "parent-tree",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Returns Parent Tree",
            "default": false
          },
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "include-parent-tree",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "retrieve parent tree",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Structure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Structure"
        ],
        "summary": "Edit one specific Structure Level.",
        "description": "Edit Structure Level name.",
        "operationId": "patchStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number"
                },
                "structureName": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Structure"
        ],
        "summary": "Delete one specific Structure Level.",
        "description": "Delete one specific Structure Level.",
        "operationId": "deleteStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures": {
      "x-swagger-router-controller": "structureController",
      "post": {
        "tags": [
          "Structure"
        ],
        "summary": "Create new Structure.",
        "description": "Create new Structure.",
        "operationId": "createStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "structure",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StructureInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewStructure"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structure/history/uuid/{uuid}": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Get Structure Movements History",
        "description": "Get Structure Movements History",
        "operationId": "getStructureHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Structure"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures/children/{businessModelId}": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "summary": "Get list of Structures from parent level.",
        "description": "Get list of Structures.",
        "tags": [
          "Structure"
        ],
        "operationId": "getStructureChildren",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "name": "parentStructureUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "parentStructureUidArray",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "structureName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Structure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures/report": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "summary": "Get list of Structures.",
        "description": "Get list of Structures.",
        "tags": [
          "Structure"
        ],
        "operationId": "getStructureExport",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "business-model-uid",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "structure-level-id",
            "in": "query",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Structure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures/{businessModelId}": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "summary": "Get list of Structures.",
        "description": "Get list of Structures.",
        "tags": [
          "Structure"
        ],
        "operationId": "getStructure",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "name": "structureLevelId",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "structureLevelUid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "structureCode",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "$ref": "#/parameters/structureName"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Structure"
              }
            },
            "headers": {
              "contentRange": {
                "description": "Total existing records.",
                "type": "integer"
              },
              "acceptRange": {
                "description": "Maximum number of records that can be requested per request.",
                "type": "integer"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures/{businessModelId}/{structureCode}": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "summary": "Get list of Structures.",
        "description": "Get list of Structures.",
        "tags": [
          "Structure"
        ],
        "operationId": "getStructureById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "$ref": "#/parameters/structureCode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Structure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structures/parent/{businessModelId}/{structureLevelId}": {
      "x-swagger-router-controller": "structureController",
      "get": {
        "summary": "Get list of Structures.",
        "description": "Get list of Structures.",
        "tags": [
          "Structure"
        ],
        "operationId": "getStructureParent",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "$ref": "#/parameters/structureLevelId"
          },
          {
            "name": "structureName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Structure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel": {
      "x-swagger-router-controller": "hierarchyController",
      "get": {
        "summary": "Get list of all commercial model's Hierarchies levels.",
        "description": "This endpoint has the main objective to return all the commercial model's hierarchies levels. It should accept the commercial model  and the country as input.",
        "tags": [
          "Hierarchy Level"
        ],
        "operationId": "getHierarchy",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Created successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hierarchyLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Create a new Hierarchy level.",
        "description": "This endpoint is to create an identifier for a new hierarchy of levels and save the association with the Commercial Model.",
        "operationId": "createHierarchy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "hierarchyRelationship",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hierarchyLevel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewHierarchy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/functions/uuid/{uuid}": {
      "x-swagger-router-controller": "hierarchyController",
      "get": {
        "summary": "Get list of all commercial model's Hierarchies levels.",
        "description": "This endpoint has the main objective to return all the commercial model's hierarchies levels. It should accept the commercial model  and the country as input.",
        "tags": [
          "Hierarchy Level"
        ],
        "operationId": "getHierarchyFunction",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Created successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HierarchyFunction"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Create a new Hierarchy level.",
        "description": "This endpoint is to create an identifier for a new hierarchy of levels and save the association with the Commercial Model.",
        "operationId": "createHierarchyFunction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "hierarchyFunction",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HierarchyFunction"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewHierarchy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/uuid/{uuid}": {
      "x-swagger-router-controller": "hierarchyController",
      "get": {
        "summary": "Get list of one Hierarchy Relationships.",
        "description": "Get list of Hierarchy Relationships of the one commercial model hierarchy. This way, returns all structures levels and their ordenation.",
        "tags": [
          "Hierarchy Level"
        ],
        "operationId": "getHierarchyByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hierarchyLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/get-hierarchy/{businessModelUid}": {
      "x-swagger-router-controller": "hierarchyController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Hierarchy Level"
        ],
        "operationId": "getHierarchyByBusinessModel",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "businessModelUid",
            "in": "path",
            "description": "Entity unique identifier",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hierarchyStructureLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/enable/{businessModelId}/{hierarchyId}": {
      "x-swagger-router-controller": "hierarchyController",
      "patch": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Activate one hierarchy.",
        "description": "activate one hierarchy and turns off any other hierarchy with same model.",
        "operationId": "enableHierarchy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "$ref": "#/parameters/hierarchyId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/toggle/person/{uuid}": {
      "x-swagger-router-controller": "hierarchyController",
      "patch": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Toggle hasPerson flag to a hierarchy.",
        "description": "activate/deactivate hasPerson flag.",
        "operationId": "toggleHasPerson",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/switch/calendar/{uuid}": {
      "x-swagger-router-controller": "hierarchyController",
      "patch": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Switch hasCalendar flag to a hierarchy Level.",
        "description": "change hasCalendar flag owner.",
        "operationId": "switchCalendar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/switch/zones/{uuid}": {
      "x-swagger-router-controller": "hierarchyController",
      "patch": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Switch hasZones flag to a hierarchy Level.",
        "description": "change hasZones flag owner.",
        "operationId": "switchZones",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/hierarchyLevel/{businessModelId}/{hierarchyId}": {
      "x-swagger-router-controller": "hierarchyController",
      "get": {
        "summary": "Get list of one Hierarchy Relationships.",
        "description": "Get list of Hierarchy Relationships of the one commercial model hierarchy. This way, returns all structures levels and their ordenation.",
        "tags": [
          "Hierarchy Level"
        ],
        "operationId": "getHierarchyById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "$ref": "#/parameters/hierarchyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hierarchyLevel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Hierarchy Level"
        ],
        "summary": "Update a Hierarchy Relationships.",
        "description": "Update an Hierarchy Relationships. It has as inputs the business model and country. It makes changes the additional structure level and/or change their ordenation.",
        "operationId": "patchHierarchy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/businessModelId"
          },
          {
            "$ref": "#/parameters/hierarchyId"
          },
          {
            "name": "hierarchyRelationship",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hierarchyLevel"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/calendar": {
      "x-swagger-router-controller": "calendarController",
      "get": {
        "summary": "Get list of Calendars.",
        "description": "Get list of Calendars.",
        "tags": [
          "Calendar"
        ],
        "operationId": "getCalendar",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "calendarName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterBusinessModel",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Filter calendars by business model"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Calendar"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Create a new Calendar.",
        "description": "Create a new Calendars.",
        "operationId": "createCalendar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "calendar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewCalendar"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/calendar/add-structure": {
      "x-swagger-router-controller": "calendarController",
      "patch": {
        "tags": [
          "Calendar"
        ],
        "summary": "Add a structure an existing Calendar.",
        "description": "Add a structure an existing Calendar.",
        "operationId": "addStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "calendar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarAddStructure"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/calendar/cycle/{businessModelId}/{year}": {
      "x-swagger-router-controller": "calendarController",
      "get": {
        "summary": "Get list of Calendar's cycles by year.",
        "description": "Get list of Calendar's cycles by year.",
        "tags": [
          "Calendar"
        ],
        "operationId": "getCalendarCyclesByYear",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "calendar-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/businessModelId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "calendarUid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "cycleUid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "cycle": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/calendar/preview": {
      "x-swagger-router-controller": "calendarController",
      "post": {
        "tags": [
          "Calendar"
        ],
        "summary": "Preview calendar cycle propagation",
        "description": "Preview calendar cycle propagation.",
        "operationId": "previewCalendar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "calendar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewCalendar"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/calendar/uuid/{uuid}": {
      "x-swagger-router-controller": "calendarController",
      "get": {
        "summary": "Get Calendar data.",
        "description": ".",
        "tags": [
          "Calendar"
        ],
        "operationId": "getCalendarByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "initial-cycle",
            "in": "query",
            "description": "initial cycle to display",
            "type": "number"
          },
          {
            "name": "final-cycle",
            "in": "query",
            "description": "final cycle to display",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/calendar/report": {
      "x-swagger-router-controller": "calendarController",
      "get": {
        "summary": "Get Calendar report data. If none of the filter header is informed, this will return all cycles beginning from actual ones",
        "description": ".",
        "tags": [
          "Calendar"
        ],
        "operationId": "getCalendarReport",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "business-model-uid",
            "in": "query",
            "description": "filter by business model",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "structure-uid",
            "in": "query",
            "description": "filter by structure",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "initial-cycle",
            "in": "query",
            "description": "initial cycle to filter",
            "type": "number"
          },
          {
            "name": "final-cycle",
            "in": "query",
            "description": "final cycle to filter. must combine with initial-cycle",
            "type": "number"
          },
          {
            "name": "initial-date",
            "in": "query",
            "description": "initial date to filter",
            "type": "string",
            "format": "date"
          },
          {
            "name": "final-date",
            "in": "query",
            "description": "final date to filter. Must combine with initial-date",
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/holiday": {
      "x-swagger-router-controller": "holidayController",
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Create a new Holiday.",
        "description": ".",
        "operationId": "createHoliday",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "holiday",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Holiday"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewHoliday"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/holiday/{holidayYear}": {
      "x-swagger-router-controller": "holidayController",
      "get": {
        "summary": "Get list of Holidays.",
        "description": ".",
        "tags": [
          "Holidays"
        ],
        "operationId": "getHoliday",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/holidayYear"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Holiday"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/holiday/uuid/{uuid}": {
      "x-swagger-router-controller": "holidayController",
      "patch": {
        "tags": [
          "Holidays"
        ],
        "summary": "Edit current Holiday.",
        "description": ".",
        "operationId": "patchHoliday",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "holiday",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Holiday"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Holiday by Uid.",
        "tags": [
          "Holidays"
        ],
        "operationId": "deleteHoliday",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cycles": {
      "x-swagger-router-controller": "cyclesController",
      "get": {
        "summary": "Get list of Cycles.",
        "description": ".",
        "tags": [
          "Cycles"
        ],
        "operationId": "getCycle",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cycle"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cycles"
        ],
        "summary": "Create a new set of Cycles for a calendar.",
        "description": ".",
        "operationId": "createCycle",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/CalendarRef"
                },
                {
                  "$ref": "#/definitions/CyclePreviewArray"
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/CalendarRef"
                },
                {
                  "$ref": "#/definitions/CyclePreviewArray"
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cycles/subcycles": {
      "x-swagger-router-controller": "cyclesController",
      "get": {
        "summary": "Get list of Cycles.",
        "description": ".",
        "tags": [
          "Cycles"
        ],
        "operationId": "getSubcycles",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cycle"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cycles/{cycleId}": {
      "x-swagger-router-controller": "cyclesController",
      "get": {
        "summary": "Get list of Cycle by Id.",
        "description": ".",
        "tags": [
          "Cycles"
        ],
        "operationId": "getCycleById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cycleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cycle"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cycles"
        ],
        "summary": "Edit current Cycle.",
        "description": ".",
        "operationId": "patchCycle",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/cycleId"
          },
          {
            "name": "cycle",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cycle"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/operational/cycles": {
      "x-swagger-router-controller": "cyclesController",
      "get": {
        "summary": "Get list of Operational Cycles.",
        "description": ".",
        "tags": [
          "Cycles"
        ],
        "operationId": "getCycles",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "structure-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Structure Uid"
          },
          {
            "name": "destiny-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Destiny Parent Structure Uid"
          },
          {
            "name": "calendar-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Calendar Uid"
          },
          {
            "name": "movement-allowed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "list only allowed for movement cycles",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "calendar": {
                  "$ref": "#/definitions/CalendarRef"
                },
                "cycles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Cycle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cycles/groups": {
      "x-swagger-router-controller": "cyclesController",
      "post": {
        "summary": "Post a cycle group",
        "description": "",
        "tags": [
          "Cycles"
        ],
        "operationId": "postCycleGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cycleUid": {
                  "type": "string",
                  "format": "uuid"
                },
                "structureUid": {
                  "type": "string",
                  "format": "uuid"
                },
                "groupId": {
                  "type": "number"
                },
                "newGroup": {
                  "type": "boolean",
                  "default": false
                },
                "description": {
                  "type": "string"
                },
                "dateEnd": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/cycles/groups/{uuid}/{groupId}": {
      "x-swagger-router-controller": "cyclesController",
      "get": {
        "summary": "Get a cycle group. from a cycle uuid",
        "description": ".",
        "tags": [
          "Cycles"
        ],
        "operationId": "getCycleGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "groupId",
            "in": "path",
            "type": "number",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CycleGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/block/report": {
      "x-swagger-router-controller": "blockController",
      "get": {
        "summary": "Get Block report data. If none of the filter header is informed, this will return all cycles beginning from actual ones",
        "description": ".",
        "tags": [
          "Block"
        ],
        "operationId": "getBlockReport",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "business-model-uid",
            "in": "query",
            "description": "filter by business model",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "structure-uid",
            "in": "query",
            "description": "filter by structure",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "initial-cycle",
            "in": "query",
            "description": "initial cycle to filter",
            "type": "number"
          },
          {
            "name": "final-cycle",
            "in": "query",
            "description": "final cycle to filter. must combine with initial-cycle",
            "type": "number"
          },
          {
            "name": "initial-date",
            "in": "query",
            "description": "initial date to filter",
            "type": "string",
            "format": "date"
          },
          {
            "name": "final-date",
            "in": "query",
            "description": "final date to filter. Must combine with initial-date",
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Calendar"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/block/{calendarYear}": {
      "x-swagger-router-controller": "blockController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Block"
        ],
        "operationId": "getBlock",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/calendarYear"
          },
          {
            "name": "business-model",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "Business Model ID"
          },
          {
            "name": "calendar-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid",
            "description": "Calendar UUID"
          },
          {
            "name": "cycle-code",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "Cycle code"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Block"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/block/sub-block/{calendarYear}": {
      "x-swagger-router-controller": "blockController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Block"
        ],
        "operationId": "getSubBlock",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/calendarYear"
          },
          {
            "name": "calendar-uid",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Calendar UUID"
          },
          {
            "name": "cycle-code",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "Cycle code"
          },
          {
            "name": "block-name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Block name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Block"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/block/sub-block/structure/{calendarYear}": {
      "x-swagger-router-controller": "blockController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Block"
        ],
        "operationId": "getStructureBlock",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/calendarYear"
          },
          {
            "name": "calendar-uid",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "Calendar UUID"
          },
          {
            "name": "cycle-code",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "Cycle code"
          },
          {
            "name": "block-name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Block name"
          },
          {
            "name": "sub-block-name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sub block name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureBlock"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get list of Zones.",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getZones",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "city-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "zone-code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Zone Code"
          },
          {
            "name": "zone-name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Zone name"
          },
          {
            "name": "geo-coverage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Zone"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Zones"
        ],
        "summary": "Create a new Zone.",
        "description": ".",
        "operationId": "createZones",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "zones",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ZoneInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ZoneInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones/uuid/{uuid}": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get list of Zone.",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getZonesByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ZoneInput"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Zones"
        ],
        "summary": "Update Zone.",
        "description": ".",
        "operationId": "patchZones",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "zones",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ZoneInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewZone"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Zones"
        ],
        "summary": "Delete Zone.",
        "description": ".",
        "operationId": "deleteZones",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones/uf": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get list of UFs",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getAllUf",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/company"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/State"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones/cities": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get list ofCities",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getCities",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/company"
          },
          {
            "$ref": "#/parameters/stateId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/City"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones/districts/assignments/{uuid}": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get list of zones/district Assignments with structures",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getAssignments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/company"
          },
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "$ref": "#/parameters/geoCoverage"
          },
          {
            "name": "city-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "actual-list",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "geo-coverage-list",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/zoneDistrictAssignment"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Save zones/district Assignments with structures",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "postAssignments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/company"
          },
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "assignments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/zoneDistrictAssignment"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/zoneDistrictAssignment"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones/districts/structures": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get list of structures assigments with zones/district",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getStructuresAssignments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/company"
          },
          {
            "name": "city-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/geoCoverage"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/zoneDistrictStructure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/zones/geo-structure-tree": {
      "x-swagger-router-controller": "zonesController",
      "get": {
        "summary": "Get geo structure tree.",
        "description": ".",
        "tags": [
          "Zones"
        ],
        "operationId": "getGeoStructureTree",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "geo-structure-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "geo-structure-code",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "geo-structure-description",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeoStructureTree"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Zones"
        ],
        "summary": "Handle Geo Structure.",
        "description": ".",
        "operationId": "resolveGeoStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "geo-structures",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "values"
                ],
                "properties": {
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "geoStructureCode",
                        "geoStructureDescription"
                      ],
                      "properties": {
                        "geoStructureCode": {
                          "type": "number"
                        },
                        "geoStructureDescription": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "delete": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GeoStructure"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/district": {
      "x-swagger-router-controller": "districtController",
      "get": {
        "summary": "Get list of District.",
        "description": ".",
        "tags": [
          "District"
        ],
        "operationId": "getDistrict",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "city-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "district-description",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "District Description"
          },
          {
            "$ref": "#/parameters/geoCoverage"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/District"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "District"
        ],
        "summary": "Create a new District.",
        "description": ".",
        "operationId": "createDistrict",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "district",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DistrictInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewZone"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/district/uuid/{uuid}": {
      "x-swagger-router-controller": "districtController",
      "get": {
        "summary": "Get list of District.",
        "description": ".",
        "tags": [
          "District"
        ],
        "operationId": "getDistrictByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DistrictInput"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "District"
        ],
        "summary": "Update District.",
        "description": ".",
        "operationId": "patchDistrict",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "district",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DistrictInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NewZone"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "District"
        ],
        "summary": "Delete District.",
        "description": ".",
        "operationId": "deleteDistrict",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structureTransfer": {
      "x-swagger-router-controller": "structureTransferController",
      "get": {
        "summary": "Get list of Structure Transfers.",
        "description": ".",
        "tags": [
          "Transfers"
        ],
        "operationId": "getStructureTransfer",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureTransfer"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Create a new Structure Transfer.",
        "description": ".",
        "operationId": "createStructureTransfer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "transferStructure",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructureTransfer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structureTransfer/{transferStructureId}": {
      "x-swagger-router-controller": "zoneStructureController",
      "get": {
        "summary": "Get list of Structure Transfer by Id.",
        "description": ".",
        "tags": [
          "Transfers"
        ],
        "operationId": "getTransferStructureById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/transferStructureId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureTransfer"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Transfers"
        ],
        "summary": "Edit current Structure Transfer.",
        "description": ".",
        "operationId": "patchTransferStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/transferStructureId"
          },
          {
            "name": "transferStructure",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructureTransfer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/health": {
      "x-swagger-router-controller": "healthCheckController",
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Checks API functionalities.",
        "description": "The endpoints returns whether the APIs are working or not.",
        "operationId": "getHealthCheck",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/parameter/calendar": {
      "x-swagger-router-controller": "parameterController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Parameters"
        ],
        "operationId": "getParameterCalendar",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalendarParameter"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parameters"
        ],
        "summary": "",
        "description": "",
        "operationId": "createParameterCalendar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "CalendarParameter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalendarParameter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CalendarParameter"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structure/movement": {
      "x-swagger-router-controller": "movementController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Movement"
        ],
        "operationId": "getStructureMovement",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "structureName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "movementUid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "structure": {
                    "type": "string"
                  },
                  "parentStructureSource": {
                    "type": "string"
                  },
                  "parentStructureDestiny": {
                    "type": "string"
                  },
                  "cycleCode": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string"
                  },
                  "dateMovement": {
                    "type": "string",
                    "format": "date"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Movement"
        ],
        "summary": "",
        "description": "",
        "operationId": "createStructureMovement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "name": "movement",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovementInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CalendarParameter"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structure/movement/report/{uuid}": {
      "x-swagger-router-controller": "movementController",
      "get": {
        "summary": "",
        "description": "uuid = business model uuid",
        "tags": [
          "Movement"
        ],
        "operationId": "getStructureMovementReport",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "date-start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "date-end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "movementUid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "structure": {
                    "type": "string"
                  },
                  "parentStructureSource": {
                    "type": "string"
                  },
                  "parentStructureDestiny": {
                    "type": "string"
                  },
                  "cycleCode": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string"
                  },
                  "dateMovement": {
                    "type": "string",
                    "format": "date"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/structure/movement/uuid/{uuid}": {
      "x-swagger-router-controller": "movementController",
      "get": {
        "summary": "",
        "description": "",
        "tags": [
          "Movement"
        ],
        "operationId": "getStructureMovementByUid",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MovementGet"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Movement"
        ],
        "summary": "",
        "description": "",
        "operationId": "patchStructureMovement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "movement",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovementInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StructureParametersInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/parameter/structure/{uuid}": {
      "x-swagger-router-controller": "parameterController",
      "get": {
        "summary": "uuid = parentStructureUid",
        "description": "uuid = parentStructureUid",
        "tags": [
          "Parameters"
        ],
        "operationId": "getParametersStructure",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureParameter"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parameters"
        ],
        "summary": "uuid = parentStructureUid",
        "description": "uuid = parentStructureUid",
        "operationId": "createParametersStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "StructureParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructureParametersInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StructureParametersInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/parameter/movement/structure/{uuid}": {
      "x-swagger-router-controller": "parameterController",
      "get": {
        "summary": "uuid = hierarchyUid",
        "description": "uuid = hierarchyUid",
        "tags": [
          "Parameters"
        ],
        "operationId": "getParametersMovementStructure",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructureMovementParameter"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parameters"
        ],
        "summary": "uuid = hierarchyUid",
        "description": "uuid = hierarchyUid",
        "operationId": "createParameterMovementStructure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/uuid"
          },
          {
            "name": "StructureMovementParameter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructureMovementParameter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StructureParametersInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/businessModel": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Business Models",
        "description": "Get Business Models",
        "tags": [
          "External"
        ],
        "operationId": "getBusinessModels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "group-roles",
            "in": "header",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "business-model-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "business-model-name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "function-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "role-id",
            "in": "query",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalBusinessModel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/businessModel/active": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Active Business Models",
        "description": "Get Active Business Models",
        "tags": [
          "External"
        ],
        "operationId": "getBusinessModelActive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "group-roles",
            "in": "header",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "business-model-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "business-model-name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "function-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "role-id",
            "in": "query",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalBusinessModel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/hierarchy": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Hierarchy",
        "description": "Get Hierarchy",
        "tags": [
          "External"
        ],
        "operationId": "getHierarchy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "group-roles",
            "in": "header",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hierarchyStructureLevelWithoutUid"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structures/cycle/structures-cycles": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Cycles From Structures",
        "description": "Get Cycles From Structures",
        "tags": [
          "External"
        ],
        "operationId": "getCyclesFromStructures",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-level-id",
            "in": "query",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-code",
            "in": "query",
            "required": true,
            "type": "number"
          },
          {
            "name": "qty-cycles",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "cycles-date-start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "retrieve-level-cycles",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "output": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "orderLevel": {
                          "type": "number"
                        },
                        "hasPerson": {
                          "type": "boolean"
                        },
                        "hasCalendar": {
                          "type": "boolean"
                        },
                        "hasZones": {
                          "type": "boolean"
                        },
                        "structureLevelId": {
                          "type": "number"
                        },
                        "structureCode": {
                          "type": "number"
                        },
                        "structureName": {
                          "type": "string"
                        },
                        "parentStructureLevelId": {
                          "type": "number"
                        },
                        "parentStructureCode": {
                          "type": "number"
                        },
                        "cycles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cycleCode": {
                                "type": "number"
                              },
                              "cycleBeginDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "cycleEndDate": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structures/structure-children": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Structure Children",
        "description": "Get Structure Children",
        "tags": [
          "External"
        ],
        "operationId": "getStructureChildren",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "parentStructureLevelId",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "parentStructureCode",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "parentStructureCodeArray",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          {
            "name": "orderLevel",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "structureName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "structureCode",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructureWithoutUid"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structures/all": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get All Structures by Structure Level",
        "description": "Get All Structures by Structure Level",
        "tags": [
          "External"
        ],
        "operationId": "getStructureAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-level-id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          {
            "name": "order-level",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StructuresByCycle"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structure/consultant": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Structure Consultant",
        "description": "Get Structure Consultant",
        "tags": [
          "External"
        ],
        "operationId": "getStructureConsultant",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "zip-code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/geoCoverage"
          },
          {
            "name": "parent-structure-level-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "parent-structure-code",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "filter-structure-code",
            "in": "query",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "structureLevelId": {
                    "type": "number"
                  },
                  "structureCode": {
                    "type": "number"
                  },
                  "structureName": {
                    "type": "string"
                  },
                  "parentStructureLevelId": {
                    "type": "number"
                  },
                  "parentStructureCode": {
                    "type": "number"
                  },
                  "maxPeople": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  },
                  "hasNextLevel": {
                    "type": "boolean"
                  },
                  "weightMax": {
                    "type": "number"
                  },
                  "functions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Functions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structure/end-cycle": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Structure by end date cycle",
        "description": "Get Structure by end date cycle",
        "tags": [
          "External"
        ],
        "operationId": "getStructureEndCycle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "structureLevelId": {
                    "type": "number"
                  },
                  "structureCode": {
                    "type": "number"
                  },
                  "structureName": {
                    "type": "string"
                  },
                  "parentStructureLevelId": {
                    "type": "number"
                  },
                  "parentStructureCode": {
                    "type": "number"
                  },
                  "parentStructureName": {
                    "type": "string"
                  },
                  "cycle": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structures/cycle": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Structure By Cycle",
        "description": "Get Structure By Cycle",
        "tags": [
          "External"
        ],
        "operationId": "getStructureByCycle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-level-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "order-level",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "cycle-code",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "cycle-code-start",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "cycle-code-end",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "date-start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "date-end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructuresByCycle"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/cycle/operacional": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get all operational cycle grouped by Cycle",
        "description": "Get all operational cycle grouped by Cycle",
        "tags": [
          "External"
        ],
        "operationId": "getOperacionalCycles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "date-start",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "date-end",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CyclesDate"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/cycle/operacional/all": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get all operacional Cycles",
        "description": "Get all operacional Cycles",
        "tags": [
          "External"
        ],
        "operationId": "getOperacionalCyclesAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "date-start",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "date-end",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CyclesDate"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structure/zip-code": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Zip Code From Structure",
        "description": "Get Zip Code From Structure",
        "tags": [
          "External"
        ],
        "operationId": "getGeoCoverageFromStructure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-level-id",
            "in": "query",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-code",
            "in": "query",
            "required": true,
            "type": "number"
          },
          {
            "$ref": "#/parameters/_limit"
          },
          {
            "$ref": "#/parameters/_offset"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalZipCodeRange"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/cycle/get-cycle": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Cycles by Year",
        "description": "Get Cycles by Year",
        "tags": [
          "External"
        ],
        "operationId": "getCycleByYear",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "structure-level-id",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "structure-code",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          {
            "name": "year-start",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "year-end",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "cycle-code",
            "in": "query",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "general": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CyclesDate2"
                  }
                },
                "structures": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "structureLevelId": {
                        "type": "number"
                      },
                      "structureCode": {
                        "type": "number"
                      },
                      "cycles": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/CyclesDate2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structure/disable/{structureLevelId}/{structureCode}": {
      "x-swagger-router-controller": "externalController",
      "patch": {
        "summary": "Disable Structure",
        "description": "Disable Structure",
        "tags": [
          "External"
        ],
        "operationId": "disableStructure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/structureLevelId"
          },
          {
            "$ref": "#/parameters/structureCode"
          },
          {
            "$ref": "#/parameters/country"
          },
          {
            "$ref": "#/parameters/company"
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "user-id",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/zones/geo-structure-tree": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get geo structure tree.",
        "description": ".",
        "tags": [
          "External"
        ],
        "operationId": "getGeoStructureTree",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geo-structure-code",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "geo-structure-description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/country"
          },
          {
            "$ref": "#/parameters/company"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalGeoStructureTree"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/structures/assignments": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get list of structures assigments with zones/district",
        "description": ".",
        "tags": [
          "External"
        ],
        "operationId": "getStructuresAssignments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "appToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/country"
          },
          {
            "$ref": "#/parameters/company"
          },
          {
            "name": "city-uid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/geoCoverage"
          },
          {
            "name": "geoCoverageType",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/zoneDistrictStructure"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/external/functions": {
      "x-swagger-router-controller": "externalController",
      "get": {
        "summary": "Get Functions",
        "description": "Get list of Functions.",
        "tags": [
          "External"
        ],
        "operationId": "getFunctions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "header",
            "description": "Country as defined by ISO-31662",
            "required": true,
            "type": "string",
            "default": "BR"
          },
          {
            "name": "company",
            "in": "header",
            "description": "company code",
            "type": "number",
            "required": true
          },
          {
            "name": "business-model-id",
            "in": "header",
            "required": true,
            "type": "number"
          },
          {
            "name": "group-roles",
            "in": "header",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ExternalFunctions"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/swagger": {
      "x-swagger-pipe": "swagger_raw"
    }
  },
  "securityDefinitions": {
    "appToken": {
      "type": "apiKey",
      "name": "appToken",
      "in": "header"
    }
  },
  "definitions": {
    "Link": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "Relation to the existing resource"
        },
        "href": {
          "type": "string",
          "description": "URL to the existing resource"
        }
      }
    },
    "Status": {
      "type": "object",
      "required": [
        "statusId"
      ],
      "properties": {
        "statusId": {
          "type": "number",
          "format": "int32",
          "description": "Status identifier."
        },
        "statusName": {
          "type": "string",
          "description": "Status name."
        }
      }
    },
    "GeoCoverageRange": {
      "type": "object",
      "properties": {
        "geoCoverageStart": {
          "type": "string"
        },
        "geoCoverageEnd": {
          "type": "string"
        }
      }
    },
    "ExternalZipCodeRange": {
      "type": "object",
      "properties": {
        "zipCodeStart": {
          "type": "string"
        },
        "zipCodeEnd": {
          "type": "string"
        }
      }
    },
    "BusinessModel": {
      "type": "object",
      "required": [
        "businessModelName"
      ],
      "properties": {
        "businessModeUid": {
          "type": "string",
          "format": "uuid",
          "description": "Business Model Unique identifier"
        },
        "businessModelId": {
          "type": "integer",
          "description": "Business Model identifier"
        },
        "businessModelName": {
          "type": "string",
          "description": "Business Model name"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "country": {
          "$ref": "#/definitions/Country"
        },
        "functions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Function"
          }
        }
      }
    },
    "ExternalBusinessModel": {
      "type": "object",
      "properties": {
        "businessModelId": {
          "type": "integer",
          "description": "Business Model identifier"
        },
        "businessModelName": {
          "type": "string",
          "description": "Business Model name"
        },
        "status": {
          "type": "number"
        },
        "company": {
          "$ref": "#/definitions/ExternalCompany"
        },
        "country": {
          "$ref": "#/definitions/ExternalCountry"
        },
        "functions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Function"
          }
        }
      }
    },
    "NewBusinessModel": {
      "type": "object",
      "properties": {
        "businessModelId": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "companyuId": {
          "type": "string",
          "format": "uuid",
          "description": "Company identifier."
        },
        "companyId": {
          "type": "number",
          "format": "int32",
          "description": "Company identifier."
        },
        "companyName": {
          "type": "string",
          "description": "Company name."
        }
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "countryUid": {
          "type": "string",
          "format": "uuid",
          "description": "Country identifier."
        },
        "countryId": {
          "type": "number",
          "format": "int32",
          "description": "Country identifier."
        },
        "countryName": {
          "type": "string",
          "description": "Country name."
        }
      }
    },
    "ExternalCompany": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "number",
          "format": "int32",
          "description": "Company identifier."
        },
        "companyName": {
          "type": "string",
          "description": "Company name."
        }
      }
    },
    "ExternalCountry": {
      "type": "object",
      "properties": {
        "countryId": {
          "type": "number",
          "format": "int32",
          "description": "Country identifier."
        },
        "countryName": {
          "type": "string",
          "description": "Country name."
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "number",
          "format": "int32",
          "description": "Role identifier."
        },
        "roleName": {
          "type": "string",
          "description": "Role name."
        }
      }
    },
    "Function": {
      "type": "object",
      "properties": {
        "functionId": {
          "type": "number",
          "format": "int32",
          "description": "Function.identifier"
        },
        "functionName": {
          "type": "string",
          "description": "Function name."
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "HierarchyFunction": {
      "type": "object",
      "properties": {
        "functionId": {
          "type": "number",
          "format": "int32",
          "description": "Function.identifier"
        },
        "functionName": {
          "type": "string",
          "description": "Function name."
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "ErrorResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Error code"
          },
          "date": {
            "type": "string",
            "format": "date-item",
            "description": "Date and time of the error"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "details": {
            "type": "string",
            "description": "Details of the error"
          }
        }
      }
    },
    "Structure": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureVersion": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        },
        "status": {
          "type": "number"
        },
        "structureParent": {
          "$ref": "#/definitions/StructureRef"
        },
        "structureLevel": {
          "$ref": "#/definitions/StructureLevelRef"
        },
        "structureLevelParent": {
          "$ref": "#/definitions/StructureLevelRef"
        },
        "businessModel": {
          "$ref": "#/definitions/StructureBusinessModel"
        }
      }
    },
    "StructureWithCycles": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureVersion": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        },
        "status": {
          "type": "number"
        },
        "structureParent": {
          "$ref": "#/definitions/StructureRef"
        },
        "structureLevel": {
          "$ref": "#/definitions/StructureLevelRef"
        },
        "structureLevelParent": {
          "$ref": "#/definitions/StructureLevelRef"
        },
        "businessModel": {
          "$ref": "#/definitions/StructureBusinessModel"
        },
        "cycles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "active": {
                "type": "object",
                "description": "active cycle",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              },
              "cycleName": {
                "type": "object",
                "description": "Cycle name should be many",
                "properties": {
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "StructureInput": {
      "type": "object",
      "properties": {
        "structureName": {
          "type": "string"
        },
        "businessModelUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureLevelUid": {
          "type": "string",
          "format": "uuid"
        },
        "parentStructureUid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "NewStructure": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureId": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "StructureRef": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureVersion": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        }
      }
    },
    "StructureWithoutUid": {
      "type": "object",
      "properties": {
        "structureCode": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        }
      }
    },
    "StructureExternal": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        },
        "structureParent": {
          "$ref": "#/definitions/StructureRef"
        },
        "structureLevel": {
          "type": "object",
          "properties": {
            "structureLevelUid": {
              "type": "string",
              "format": "uuid"
            },
            "structureLevelId": {
              "type": "number"
            },
            "structureLevelName": {
              "type": "string"
            },
            "peopleAttibution": {
              "type": "boolean"
            }
          }
        },
        "structureLevelParent": {
          "$ref": "#/definitions/StructureLevelRef"
        }
      }
    },
    "StructureLevel": {
      "type": "object",
      "properties": {
        "structureLevelUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureLevelId": {
          "type": "number"
        },
        "structureLevelName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Country"
        }
      }
    },
    "NewStructureLevel": {
      "type": "object",
      "properties": {
        "structureLevelUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureLevelId": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "StructureLevelRef": {
      "type": "object",
      "properties": {
        "structureLevelUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureLevelId": {
          "type": "number"
        },
        "structureLevelName": {
          "type": "string"
        }
      }
    },
    "StructureBusinessModel": {
      "type": "object",
      "properties": {
        "businessModelUid": {
          "type": "string",
          "format": "uuid"
        },
        "businessModelId": {
          "type": "number"
        },
        "businessModelName": {
          "type": "string"
        }
      }
    },
    "hierarchyStructureLevel": {
      "type": "object",
      "properties": {
        "businessModel": {
          "$ref": "#/definitions/StructureBusinessModel"
        },
        "hierarchies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hierarchyUid": {
                "type": "string",
                "format": "uuid"
              },
              "orderLevel": {
                "type": "number"
              },
              "hasPerson": {
                "type": "boolean"
              },
              "hasCalendar": {
                "type": "boolean"
              },
              "hasZones": {
                "type": "boolean"
              },
              "status": {
                "type": "number"
              },
              "structureLevel": {
                "$ref": "#/definitions/StructureLevelRef"
              },
              "structureLevelParent": {
                "$ref": "#/definitions/StructureLevelRef"
              }
            }
          }
        }
      }
    },
    "hierarchyStructureLevelWithoutUid": {
      "type": "object",
      "properties": {
        "businessModel": {
          "type": "object",
          "properties": {
            "businessModelId": {
              "type": "number"
            },
            "businessModelName": {
              "type": "string"
            }
          }
        },
        "hierarchies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "orderLevel": {
                "type": "number"
              },
              "hasPerson": {
                "type": "boolean"
              },
              "hasCalendar": {
                "type": "boolean"
              },
              "hasZones": {
                "type": "boolean"
              },
              "structureLevel": {
                "type": "object",
                "properties": {
                  "structureLevelId": {
                    "type": "number"
                  },
                  "structureLevelName": {
                    "type": "string"
                  }
                }
              },
              "functions": {
                "$ref": "#/definitions/Function"
              }
            }
          }
        }
      }
    },
    "hierarchyLevel": {
      "type": "object",
      "properties": {
        "businessModel": {
          "$ref": "#/definitions/StructureBusinessModel"
        },
        "country": {
          "$ref": "#/definitions/Country"
        },
        "hierarchies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hierarchyId": {
                "type": "number"
              },
              "status": {
                "type": "number"
              },
              "structureLevels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "hierarchyUid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "orderLevel": {
                      "type": "number"
                    },
                    "hasPerson": {
                      "type": "boolean"
                    },
                    "hasCalendar": {
                      "type": "boolean"
                    },
                    "hasZones": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "number"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "structureLevel": {
                      "$ref": "#/definitions/StructureLevelRef"
                    },
                    "structureLevelParent": {
                      "$ref": "#/definitions/StructureLevelRef"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "NewHierarchy": {
      "type": "object",
      "properties": {
        "hierarchyUid": {
          "type": "string",
          "format": "uuid"
        },
        "hierarchyId": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "Calendar": {
      "type": "object",
      "properties": {
        "calendarUid": {
          "type": "string",
          "format": "uuid"
        },
        "calendarName": {
          "type": "string"
        },
        "calendarType": {
          "type": "string"
        },
        "calendarYear": {
          "type": "number"
        },
        "dateStart": {
          "type": "string",
          "format": "date"
        },
        "dateEnd": {
          "type": "string",
          "format": "date"
        },
        "qtyCycles": {
          "type": "number"
        },
        "status": {
          "type": "number"
        },
        "step": {
          "type": "number"
        },
        "createdAt": {
          "type": "string",
          "format": "date-item"
        },
        "country": {
          "$ref": "#/definitions/Country"
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "cycleRange": {
          "type": "object",
          "properties": {
            "cycleStart": {
              "type": "string"
            },
            "cycleEnd": {
              "type": "string"
            }
          }
        },
        "structures": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "structureUid": {
                "type": "string",
                "format": "uuid"
              },
              "structureName": {
                "type": "string",
                "format": "uuid"
              },
              "cycles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cycleName": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string"
                        },
                        "end": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CalendarAddStructure": {
      "type": "object",
      "properties": {
        "calendarUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "createGroup": {
          "type": "boolean"
        },
        "groupSelected": {
          "type": "number"
        },
        "newStartDate": {
          "type": "string",
          "format": "date"
        },
        "initialCycle": {
          "type": "number"
        },
        "newGroupName": {
          "type": "string"
        }
      }
    },
    "CalendarInput": {
      "type": "object",
      "properties": {
        "calendarUid": {
          "type": "string",
          "format": "uuid"
        },
        "calendarName": {
          "type": "string"
        },
        "businessModelUid": {
          "type": "string",
          "format": "uuid"
        },
        "cycles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cycle": {
                "type": "number"
              },
              "qtyDays": {
                "type": "number"
              },
              "qtySubcycles": {
                "type": "number"
              },
              "order": {
                "type": "number"
              }
            }
          }
        },
        "subcycles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cycle": {
                "type": "number"
              },
              "subcycle": {
                "type": "string"
              },
              "qtyDays": {
                "type": "number"
              }
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "groupId": {
                "type": "number"
              },
              "groupName": {
                "type": "string"
              },
              "groupInitialDate": {
                "type": "string"
              }
            }
          }
        },
        "structures": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "structureUid": {
                "type": "string",
                "format": "uuid"
              },
              "structureCode": {
                "type": "number"
              },
              "structureName": {
                "type": "string"
              },
              "structureLevelId": {
                "type": "number"
              },
              "structureLevelName": {
                "type": "string"
              },
              "groupId": {
                "type": "number"
              },
              "groupName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NewCalendar": {
      "type": "object",
      "properties": {
        "calendarUid": {
          "type": "string",
          "format": "uuid"
        },
        "calendarVersion": {
          "type": "number"
        },
        "calendarName": {
          "type": "string"
        },
        "calendarStep": {
          "type": "string"
        }
      }
    },
    "CalendarRef": {
      "type": "object",
      "properties": {
        "calendarUid": {
          "type": "string",
          "format": "uuid"
        },
        "calendarVersion": {
          "type": "number"
        },
        "calendarName": {
          "type": "string"
        },
        "step": {
          "type": "number"
        }
      }
    },
    "CyclePreview": {
      "type": "object",
      "properties": {
        "cycleUid": {
          "type": "string",
          "format": "uuid"
        },
        "cycleCode": {
          "type": "number"
        },
        "qtySubcycles": {
          "type": "number"
        },
        "qtyDays": {
          "type": "number"
        }
      }
    },
    "CyclePreviewArray": {
      "type": "object",
      "properties": {
        "cycles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CyclePreview"
          }
        }
      }
    },
    "CycleGroup": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number"
        },
        "groupName": {
          "type": "string"
        },
        "groupInitialDate": {
          "type": "string"
        }
      }
    },
    "Cycle": {
      "type": "object",
      "properties": {
        "cycleUid": {
          "type": "string",
          "format": "uuid"
        },
        "cycleCode": {
          "type": "number"
        },
        "dateStart": {
          "type": "string",
          "format": "date"
        },
        "dateEnd": {
          "type": "string",
          "format": "date"
        },
        "groupName": {
          "type": "string"
        },
        "qtySubcycles": {
          "type": "number"
        },
        "qtyDays": {
          "type": "number"
        }
      }
    },
    "NewCycle": {
      "type": "object",
      "properties": {
        "cycleId": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "Holiday": {
      "type": "object",
      "properties": {
        "holidayUid": {
          "type": "string",
          "format": "uuid"
        },
        "holidayDate": {
          "type": "string",
          "format": "date"
        },
        "holidayName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Country"
        }
      }
    },
    "NewHoliday": {
      "type": "object",
      "properties": {
        "holidayUid": {
          "type": "string",
          "format": "uuid"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "StateCity": {
      "type": "object",
      "properties": {
        "country": {
          "$ref": "#/definitions/Country"
        },
        "state": {
          "$ref": "#/definitions/State"
        },
        "city": {
          "$ref": "#/definitions/City"
        }
      }
    },
    "State": {
      "type": "object",
      "properties": {
        "stateId": {
          "type": "string"
        },
        "stateUf": {
          "type": "string"
        },
        "stateName": {
          "type": "string"
        }
      }
    },
    "City": {
      "type": "object",
      "properties": {
        "cityUid": {
          "type": "string",
          "format": "uuid"
        },
        "cityId": {
          "type": "number"
        },
        "cityName": {
          "type": "string"
        },
        "ibgeCode": {
          "type": "number"
        }
      }
    },
    "CityRef": {
      "type": "object",
      "properties": {
        "cityUid": {
          "type": "string",
          "format": "uuid"
        },
        "cityId": {
          "type": "number"
        },
        "cityName": {
          "type": "string"
        },
        "stateId": {
          "type": "number"
        },
        "stateName": {
          "type": "string"
        },
        "stateUf": {
          "type": "string"
        },
        "ibgeCode": {
          "type": "number"
        }
      }
    },
    "CityDistrict": {
      "type": "object",
      "properties": {
        "cityDistrictId": {
          "type": "number"
        },
        "cityDistrictName": {
          "type": "string"
        }
      }
    },
    "StructureZone": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "object",
          "properties": {
            "zoneId": {
              "type": "number"
            },
            "zoneName": {
              "type": "string"
            }
          }
        },
        "structures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureRef"
          }
        }
      }
    },
    "NewStructureZone": {
      "type": "object",
      "properties": {
        "zoneId": {
          "type": "number"
        },
        "structureCode": {
          "type": "number"
        },
        "structureVersion": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "NewZone": {
      "type": "object",
      "properties": {
        "zoneId": {
          "type": "number"
        },
        "_link": {
          "$ref": "#/definitions/Link"
        }
      }
    },
    "CalendarTransfer": {
      "type": "object",
      "properties": {
        "country": {
          "$ref": "#/definitions/Country"
        },
        "businessModel": {
          "$ref": "#/definitions/StructureBusinessModel"
        },
        "calendarCurrent": {
          "$ref": "#/definitions/CalendarRef"
        },
        "calendarFuture": {
          "$ref": "#/definitions/CalendarRef"
        },
        "cycle": {
          "type": "object",
          "properties": {
            "operationalCycle": {
              "type": "number"
            }
          }
        }
      }
    },
    "StructureTransfer": {
      "type": "object",
      "properties": {
        "country": {
          "$ref": "#/definitions/Country"
        },
        "businessModel": {
          "$ref": "#/definitions/StructureBusinessModel"
        },
        "structureCurrent": {
          "$ref": "#/definitions/StructureRef"
        },
        "structureFuture": {
          "$ref": "#/definitions/StructureRef"
        },
        "cycle": {
          "type": "object",
          "properties": {
            "operationalCycle": {
              "type": "number"
            }
          }
        }
      }
    },
    "StructureParameter": {
      "type": "object",
      "properties": {
        "structureParameterUid": {
          "type": "string",
          "format": "uuid"
        },
        "weightMax": {
          "type": "number"
        },
        "weight": {
          "type": "number"
        },
        "blockFlag": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "structure": {
          "$ref": "#/definitions/StructureRef"
        }
      }
    },
    "StructureParametersInput": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "weightMax": {
            "type": "number"
          },
          "blockFlag": {
            "type": "boolean"
          },
          "structure": {
            "$ref": "#/definitions/StructureRef"
          }
        }
      }
    },
    "StructureMovementParameter": {
      "type": "object",
      "properties": {
        "parameterMovementUid": {
          "type": "string",
          "format": "uuid"
        },
        "hierarchyUid": {
          "type": "string",
          "format": "uuid"
        },
        "qtyCyclePrior": {
          "type": "number"
        },
        "checkZone": {
          "type": "boolean"
        },
        "changeLevel": {
          "type": "boolean"
        },
        "gapWarning": {
          "type": "boolean"
        },
        "gapWarningDays": {
          "type": "number"
        }
      }
    },
    "CalendarParameter": {
      "type": "object",
      "properties": {
        "parameterCalendarId": {
          "type": "number"
        },
        "countryId": {
          "type": "number"
        },
        "companyId": {
          "type": "number"
        },
        "countryCompanyUid": {
          "type": "string",
          "format": "uuid"
        },
        "mondayMode": {
          "type": "number"
        },
        "mondayQtyDays": {
          "type": "number"
        },
        "tuesdayMode": {
          "type": "number"
        },
        "tuesdayQtyDays": {
          "type": "number"
        },
        "wednesdayMode": {
          "type": "number"
        },
        "wednesdayQtyDays": {
          "type": "number"
        },
        "thursdayMode": {
          "type": "number"
        },
        "thursdayQtyDays": {
          "type": "number"
        },
        "fridayMode": {
          "type": "number"
        },
        "fridayQtyDays": {
          "type": "number"
        },
        "saturdayMode": {
          "type": "number"
        },
        "saturdayQtyDays": {
          "type": "number"
        },
        "sundayMode": {
          "type": "number"
        },
        "sundayQtyDays": {
          "type": "number"
        }
      }
    },
    "MovementGet": {
      "type": "object",
      "properties": {
        "movementUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "parentStructureSourceUid": {
          "type": "string",
          "format": "uuid"
        },
        "parentStructureDestinyUid": {
          "type": "string",
          "format": "uuid"
        },
        "dateMovement": {
          "type": "string",
          "format": "date"
        },
        "cycleCode": {
          "type": "number"
        },
        "status": {
          "type": "number"
        },
        "qtyOverlap": {
          "type": "number"
        },
        "qtyGap": {
          "type": "number"
        },
        "cycleGroupUid": {
          "type": "number"
        },
        "destinyCycleGroupUid": {
          "type": "number",
          "format": "uuid"
        },
        "description": {
          "type": "string"
        },
        "parentDestiny": {
          "$ref": "#/definitions/StructureRef3"
        }
      }
    },
    "MovementInput": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "parentStructureSourceUid": {
          "type": "string",
          "format": "uuid"
        },
        "parentStructureDestinyUid": {
          "type": "string",
          "format": "uuid"
        },
        "dateMovement": {
          "type": "string",
          "format": "date"
        },
        "cycleCode": {
          "type": "number"
        },
        "qtyOverlap": {
          "type": "number"
        },
        "qtyGap": {
          "type": "number"
        },
        "cycleGroupUid": {
          "type": "string",
          "format": "uuid"
        },
        "destinyCycleGroupUid": {
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "StructureRef2": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureVersion": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        }
      }
    },
    "StructureRef3": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        }
      }
    },
    "StructuresByCycle": {
      "type": "object",
      "properties": {
        "structureLevelId": {
          "type": "number"
        },
        "structureLevelName": {
          "type": "string"
        },
        "structureCode": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        },
        "parentStructureLevelId": {
          "type": "number"
        },
        "parentStructureLevelName": {
          "type": "string"
        },
        "parentStructureCode": {
          "type": "number"
        },
        "parentStructureName": {
          "type": "string"
        }
      }
    },
    "StructuresByCycle2": {
      "type": "object",
      "properties": {
        "structureUid": {
          "type": "string",
          "format": "uuid"
        },
        "structureCode": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "structureLevel": {
          "$ref": "#/definitions/StructureLevelRef"
        },
        "structureLevelParent": {
          "$ref": "#/definitions/StructureLevelRef"
        },
        "structureParent": {
          "$ref": "#/definitions/StructureRef2"
        }
      }
    },
    "CyclesByStructure": {
      "type": "object",
      "properties": {
        "cycleUid": {
          "type": "string",
          "format": "uuid"
        },
        "cycleCode": {
          "type": "number"
        },
        "cycleBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "cycleEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "cycleSequence": {
          "type": "number"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time"
        },
        "structure": {
          "$ref": "#/definitions/StructuresByCycle2"
        }
      }
    },
    "CyclesDate": {
      "type": "object",
      "properties": {
        "cycleCode": {
          "type": "number"
        },
        "cycleBeginDate": {
          "type": "string",
          "format": "date-time"
        },
        "cycleEndDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CyclesDate2": {
      "type": "object",
      "properties": {
        "cycleCode": {
          "type": "number"
        },
        "dateStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateEnd": {
          "type": "string",
          "format": "date-time"
        },
        "subcycles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubcyclesDate"
          }
        }
      }
    },
    "SubcyclesDate": {
      "type": "object",
      "properties": {
        "subcycleCode": {
          "type": "string"
        },
        "dateStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateEnd": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Block": {
      "type": "object",
      "properties": {
        "blockName": {
          "type": "string"
        },
        "calendarName": {
          "type": "string"
        },
        "cycleCode": {
          "type": "number"
        },
        "calendarYear": {
          "type": "number"
        },
        "parentBlockName": {
          "type": "string"
        }
      }
    },
    "BlockRef": {
      "type": "object",
      "properties": {
        "blockUid": {
          "type": "string",
          "format": "uuid"
        },
        "blockName": {
          "type": "string"
        }
      }
    },
    "StructureBlock": {
      "type": "object",
      "properties": {
        "blockName": {
          "type": "string"
        },
        "calendarName": {
          "type": "string"
        },
        "cycleCode": {
          "type": "number"
        },
        "calendarYear": {
          "type": "number"
        },
        "parentBlockName": {
          "type": "string"
        },
        "structures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructureRef"
          }
        }
      }
    },
    "District": {
      "type": "object",
      "properties": {
        "district": {
          "type": "object",
          "properties": {
            "districtUid": {
              "type": "string",
              "format": "uuid"
            },
            "districtDescription": {
              "type": "string"
            },
            "statesCity": {
              "$ref": "#/definitions/CityRef"
            }
          }
        }
      }
    },
    "DistrictInput": {
      "type": "object",
      "properties": {
        "districtUid": {
          "type": "string",
          "format": "uuid"
        },
        "districtDescription": {
          "type": "string"
        },
        "statesCity": {
          "$ref": "#/definitions/CityRef"
        },
        "districtZipcodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/geoCoverageDistrictiesRef"
          }
        }
      }
    },
    "geoCoverageDistrictiesRef": {
      "type": "object",
      "properties": {
        "zipCodeDistrictUid": {
          "type": "string",
          "format": "uuid"
        },
        "zipCodeStart": {
          "type": "string"
        },
        "zipCodeEnd": {
          "type": "string"
        }
      }
    },
    "Zone": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "object",
          "properties": {
            "zoneUid": {
              "type": "string",
              "format": "uuid"
            },
            "zoneCode": {
              "type": "string",
              "description": "Zone Code State + IBGE . Ex: SP1324433"
            },
            "zoneName": {
              "type": "string"
            },
            "statesCity": {
              "$ref": "#/definitions/CityRef"
            }
          }
        }
      }
    },
    "ZoneInput": {
      "type": "object",
      "properties": {
        "zoneUid": {
          "type": "string",
          "format": "uuid"
        },
        "zoneCode": {
          "type": "string",
          "description": "Zone Code State + IBGE . Ex: SP1324433"
        },
        "zoneName": {
          "type": "string"
        },
        "statesCity": {
          "$ref": "#/definitions/CityRef"
        },
        "zonesGeoCoverage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/geoCoverageZonesRef"
          }
        }
      }
    },
    "geoCoverageZonesRef": {
      "type": "object",
      "properties": {
        "zipCodeZoneUid": {
          "type": "string",
          "format": "uuid"
        },
        "zoneCode": {
          "type": "string",
          "description": "Zone Code State + IBGE . Ex: SP1324433"
        },
        "geoCoverageStart": {
          "type": "string"
        },
        "geoCoverageEnd": {
          "type": "string"
        }
      }
    },
    "zoneDistrictAssignment": {
      "type": "object",
      "properties": {
        "recordType": {
          "type": "string"
        },
        "recordAssigned": {
          "type": "boolean"
        },
        "recordUid": {
          "type": "string",
          "format": "uuid"
        },
        "recordFk": {
          "type": "string",
          "format": "uuid"
        },
        "cityName": {
          "type": "string"
        },
        "zoneCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "geoCoverageStart": {
          "type": "string"
        },
        "geoCoverageEnd": {
          "type": "string"
        }
      }
    },
    "zoneDistrictStructure": {
      "type": "object",
      "properties": {
        "recordType": {
          "type": "string"
        },
        "recordUid": {
          "type": "string",
          "format": "uuid"
        },
        "cityName": {
          "type": "string"
        },
        "zoneCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "geoCoverageStart": {
          "type": "string"
        },
        "geoCoverageEnd": {
          "type": "string"
        },
        "structureLevelId": {
          "type": "number"
        },
        "structureCode": {
          "type": "number"
        },
        "structureName": {
          "type": "string"
        },
        "parentStructureLevelId": {
          "type": "number"
        },
        "parentStructureCode": {
          "type": "number"
        },
        "parentStructureName": {
          "type": "string"
        }
      }
    },
    "GeoStructureTree": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "geoStructureUid": {
            "type": "string",
            "format": "uuid"
          },
          "geoStructureCode": {
            "type": "number"
          },
          "geoStructureDescription": {
            "type": "string"
          },
          "parentGeoStructureUid": {
            "type": "string",
            "format": "uuid"
          },
          "parentTree": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeoStructure"
            }
          }
        }
      }
    },
    "ExternalGeoStructureTree": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "geoStructureCode": {
            "type": "number"
          },
          "geoStructureDescription": {
            "type": "string"
          },
          "parentTree": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExternalGeoStructure"
            }
          },
          "nextLevel": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExternalGeoStructure"
            }
          }
        }
      }
    },
    "ExternalFunctions": {
      "type": "object",
      "properties": {
        "functions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Function"
          }
        }
      }
    },
    "GeoStructure": {
      "type": "object",
      "properties": {
        "geoStructureUid": {
          "type": "string",
          "format": "uuid"
        },
        "geoStructureCode": {
          "type": "number"
        },
        "geoStructureDescription": {
          "type": "string"
        },
        "parentGeoStructureUid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ExternalGeoStructure": {
      "type": "object",
      "properties": {
        "geoStructureCode": {
          "type": "number"
        },
        "geoStructureDescription": {
          "type": "string"
        }
      }
    },
    "Roles": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "number",
          "format": "int32",
          "description": "Role identifier."
        },
        "roleName": {
          "type": "string",
          "description": "Role name."
        }
      }
    },
    "Functions": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "functionId": {
            "type": "number",
            "format": "int32",
            "description": "Function.identifier"
          },
          "functionName": {
            "type": "string",
            "description": "Function name."
          },
          "role": {
            "$ref": "#/definitions/Roles"
          }
        }
      }
    }
  }
}
